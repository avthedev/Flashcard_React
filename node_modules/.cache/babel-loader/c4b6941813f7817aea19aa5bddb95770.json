{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anono\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"./home/Home\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport { deleteDeck, listDecks } from \"../utils/api\";\nimport DeckPage from \"./decks/DeckPage\";\nimport CreateDeckPage from \"./decks-new/CreateDeckPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(new AbortController().abort()).then(setDecks);\n    return () => abortController.abort();\n  }, []);\n\n  const routeButtonClick = url => {\n    history.push(url);\n  };\n\n  const deleteDeckClick = deckId => {\n    if (window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\")) {\n      deleteDeck(deckId, new AbortController().abort()).then(listDecks(new AbortController().abort())).then(setDecks).then(history.push(\"/\")).then(window.location.reload());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            decks: decks,\n            setDecks: setDecks,\n            deleteClick: deleteDeckClick,\n            deckButtonClick: routeButtonClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/decks/new\",\n          children: /*#__PURE__*/_jsxDEV(CreateDeckPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId\",\n          children: /*#__PURE__*/_jsxDEV(DeckPage, {\n            deleteDeckClick: deleteDeckClick,\n            routeButtonClick: routeButtonClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layout, \"G11efxXmh2SE3Q3tr6boo37MplY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/Users/anono/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","useEffect","useState","Header","NotFound","Home","Switch","Route","useHistory","deleteDeck","listDecks","DeckPage","CreateDeckPage","Layout","decks","setDecks","history","abortController","AbortController","abort","then","routeButtonClick","url","push","deleteDeckClick","deckId","window","confirm","location","reload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMc,OAAO,GAAGR,UAAU,EAA1B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAR,IAAAA,SAAS,CAAC,IAAIQ,eAAJ,GAAsBC,KAAtB,EAAD,CAAT,CAAyCC,IAAzC,CAA8CL,QAA9C;AAEA,WAAO,MAAME,eAAe,CAACE,KAAhB,EAAb;AACD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAME,gBAAgB,GAAIC,GAAD,IAAS;AAChCN,IAAAA,OAAO,CAACO,IAAR,CAAaD,GAAb;AACD,GAFD;;AAIA,QAAME,eAAe,GAAIC,MAAD,IAAY;AAClC,QACEC,MAAM,CAACC,OAAP,CAAe,0DAAf,CADF,EAEE;AACAlB,MAAAA,UAAU,CAACgB,MAAD,EAAS,IAAIP,eAAJ,GAAsBC,KAAtB,EAAT,CAAV,CACGC,IADH,CACQV,SAAS,CAAC,IAAIQ,eAAJ,GAAsBC,KAAtB,EAAD,CADjB,EAEGC,IAFH,CAEQL,QAFR,EAGGK,IAHH,CAGQJ,OAAO,CAACO,IAAR,CAAa,GAAb,CAHR,EAIGH,IAJH,CAIQM,MAAM,CAACE,QAAP,CAAgBC,MAAhB,EAJR;AAKD;AACF,GAVD;;AAYA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,KAAK,EAAEf,KADT;AAEE,YAAA,QAAQ,EAAEC,QAFZ;AAGE,YAAA,WAAW,EAAES,eAHf;AAIE,YAAA,eAAe,EAAEH;AAJnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,YAAlB;AAAA,iCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAYE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,gBAAZ;AAAA,iCACE,QAAC,QAAD;AACE,YAAA,eAAe,EAAEG,eADnB;AAEE,YAAA,gBAAgB,EAAEH;AAFpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF,eAkBE,QAAC,KAAD;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAzDQR,M;UAESL,U;;;KAFTK,M;AA2DT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport NotFound from \"./NotFound\";\r\nimport Home from \"./home/Home\";\r\nimport { Switch, Route, useHistory } from \"react-router-dom\";\r\nimport { deleteDeck, listDecks } from \"../utils/api\";\r\nimport DeckPage from \"./decks/DeckPage\";\r\nimport CreateDeckPage from \"./decks-new/CreateDeckPage\";\r\n\r\nfunction Layout() {\r\n  const [decks, setDecks] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    listDecks(new AbortController().abort()).then(setDecks);\r\n\r\n    return () => abortController.abort();\r\n  }, []);\r\n\r\n  const routeButtonClick = (url) => {\r\n    history.push(url);\r\n  };\r\n\r\n  const deleteDeckClick = (deckId) => {\r\n    if (\r\n      window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\")\r\n    ) {\r\n      deleteDeck(deckId, new AbortController().abort())\r\n        .then(listDecks(new AbortController().abort()))\r\n        .then(setDecks)\r\n        .then(history.push(\"/\"))\r\n        .then(window.location.reload());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container\">\r\n        {/* TODO: Implement the screen starting here */}\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home\r\n              decks={decks}\r\n              setDecks={setDecks}\r\n              deleteClick={deleteDeckClick}\r\n              deckButtonClick={routeButtonClick}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/decks/new\">\r\n            <CreateDeckPage />\r\n          </Route>\r\n          <Route path=\"/decks/:deckId\">\r\n            <DeckPage\r\n              deleteDeckClick={deleteDeckClick}\r\n              routeButtonClick={routeButtonClick}\r\n            />\r\n          </Route>\r\n          <Route>\r\n            <NotFound />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}