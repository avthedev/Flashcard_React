{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anono\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\decks-cards-edit\\\\CardEditPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { readCard, readDeck } from \"../../utils/api\";\nimport Breadcrumb from \"../Breadcrumb\";\nimport CardForm from \"../decks-cards/CardForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardEditPage({\n  deck,\n  setDeck\n}) {\n  _s();\n\n  const [card, setCard] = useState({});\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  useEffect(() => {\n    readDeck(deckId, new AbortController().abort()).then(setDeck);\n  }, [deckId, setDeck]);\n  useEffect(() => {\n    readCard(cardId, new AbortController().abort()).then(setCard);\n  }, [deck, cardId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      deck: deck,\n      type: `Edit Card ${cardId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardForm, {\n      createMode: false,\n      deckId: deckId,\n      deck: deck,\n      card: card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardEditPage, \"Ze8gd3y6FTHVMDgPeb+m0bi0JRo=\", false, function () {\n  return [useParams];\n});\n\n_c = CardEditPage;\nexport default CardEditPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardEditPage\");","map":{"version":3,"sources":["C:/Users/anono/Project_Flashcards_Qualified_1/src/Layout/decks-cards-edit/CardEditPage.jsx"],"names":["React","useEffect","useState","useParams","readCard","readDeck","Breadcrumb","CardForm","CardEditPage","deck","setDeck","card","setCard","deckId","cardId","AbortController","abort","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,iBAAnC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAtB,EAAyC;AAAA;;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEW,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBX,SAAS,EAApC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ,CAACQ,MAAD,EAAS,IAAIE,eAAJ,GAAsBC,KAAtB,EAAT,CAAR,CAAgDC,IAAhD,CAAqDP,OAArD;AACD,GAFQ,EAEN,CAACG,MAAD,EAASH,OAAT,CAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,QAAQ,CAACU,MAAD,EAAS,IAAIC,eAAJ,GAAsBC,KAAtB,EAAT,CAAR,CAAgDC,IAAhD,CAAqDL,OAArD;AACD,GAFQ,EAEN,CAACH,IAAD,EAAOK,MAAP,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEL,IAAlB;AAAwB,MAAA,IAAI,EAAG,aAAYK,MAAO;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,UAAU,EAAE,KAAtB;AAA6B,MAAA,MAAM,EAAED,MAArC;AAA6C,MAAA,IAAI,EAAEJ,IAAnD;AAAyD,MAAA,IAAI,EAAEE;AAA/D;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAnBQH,Y;UAEoBL,S;;;KAFpBK,Y;AAqBT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { readCard, readDeck } from \"../../utils/api\";\r\nimport Breadcrumb from \"../Breadcrumb\";\r\nimport CardForm from \"../decks-cards/CardForm\";\r\n\r\nfunction CardEditPage({ deck, setDeck }) {\r\n  const [card, setCard] = useState({});\r\n  const { deckId, cardId } = useParams();\r\n\r\n  useEffect(() => {\r\n    readDeck(deckId, new AbortController().abort()).then(setDeck);\r\n  }, [deckId, setDeck]);\r\n\r\n  useEffect(() => {\r\n    readCard(cardId, new AbortController().abort()).then(setCard);\r\n  }, [deck, cardId]);\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb deck={deck} type={`Edit Card ${cardId}`} />\r\n      <h3>Edit Card</h3>\r\n      <CardForm createMode={false} deckId={deckId} deck={deck} card={card} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardEditPage;\r\n"]},"metadata":{},"sourceType":"module"}