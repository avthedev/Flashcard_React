{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anono\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\decks-study\\\\StudyCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport AddCardsButton from \"../Deck/DeckButtons/AddCardsButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StudyCard({\n  cards,\n  setCards,\n  deck,\n  routeButtonClick\n}) {\n  _s();\n\n  var _deck$cards2, _deck$cards4;\n\n  const [index, setIndex] = useState(0);\n  const [cardDisplay, setCardDisplay] = useState(\"\");\n  const [hasFlipped, setHasFlipped] = useState(false);\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    var _deck$cards;\n\n    if (!deck || !(deck === null || deck === void 0 ? void 0 : (_deck$cards = deck.cards) === null || _deck$cards === void 0 ? void 0 : _deck$cards.length)) return;\n    setCardDisplay(deck.cards[index].front);\n  }, [deck, index]);\n\n  const flipCard = () => {\n    setHasFlipped(true);\n\n    if (cardDisplay === deck.cards[index].front) {\n      setCardDisplay(deck.cards[index].back);\n    } else {\n      setCardDisplay(deck.cards[index].front);\n    }\n  };\n\n  const nextCard = () => {\n    if (index === deck.cards.length - 1) {\n      if (window.confirm(\"Restart cards?\\n\\nClick 'cancel' to return to the home page.\")) {\n        setIndex(0);\n      } else {\n        history.push(\"/\");\n      }\n    } else {\n      setIndex(previousIndex => previousIndex + 1);\n    }\n  };\n\n  const nextButton = hasFlipped && /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => nextCard(),\n    children: \"Next\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n\n  if (!!deck && (deck === null || deck === void 0 ? void 0 : (_deck$cards2 = deck.cards) === null || _deck$cards2 === void 0 ? void 0 : _deck$cards2.length) <= 2) {\n    var _deck$cards3;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Not enough cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You need at least 3 cards to study. There are \", deck === null || deck === void 0 ? void 0 : (_deck$cards3 = deck.cards) === null || _deck$cards3 === void 0 ? void 0 : _deck$cards3.length, \" \", \"cards in this deck.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddCardsButton, {\n        url: `/decks/${deckId}/cards/new`,\n        deckButtonClick: routeButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n  return !!deck && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Card \", index + 1, \" of \", deck === null || deck === void 0 ? void 0 : (_deck$cards4 = deck.cards) === null || _deck$cards4 === void 0 ? void 0 : _deck$cards4.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: cardDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => flipCard(),\n      children: \"Flip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), nextButton]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n}\n\n_s(StudyCard, \"BE7noh3wcSzB+F7vkAZTALOlyRA=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = StudyCard;\nexport default StudyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyCard\");","map":{"version":3,"sources":["C:/Users/anono/Project_Flashcards_Qualified_1/src/Layout/decks-study/StudyCard.jsx"],"names":["React","useEffect","useState","useHistory","useParams","AddCardsButton","StudyCard","cards","setCards","deck","routeButtonClick","index","setIndex","cardDisplay","setCardDisplay","hasFlipped","setHasFlipped","history","deckId","length","front","flipCard","back","nextCard","window","confirm","push","previousIndex","nextButton"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport AddCardsButton from \"../Deck/DeckButtons/AddCardsButton\";\r\n\r\nfunction StudyCard({ cards, setCards, deck, routeButtonClick }) {\r\n  const [index, setIndex] = useState(0);\r\n  const [cardDisplay, setCardDisplay] = useState(\"\");\r\n  const [hasFlipped, setHasFlipped] = useState(false);\r\n  const history = useHistory();\r\n  const { deckId } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (!deck || !deck?.cards?.length) return;\r\n    setCardDisplay(deck.cards[index].front);\r\n  }, [deck, index]);\r\n\r\n  const flipCard = () => {\r\n    setHasFlipped(true);\r\n    if (cardDisplay === deck.cards[index].front) {\r\n      setCardDisplay(deck.cards[index].back);\r\n    } else {\r\n      setCardDisplay(deck.cards[index].front);\r\n    }\r\n  };\r\n\r\n  const nextCard = () => {\r\n    if (index === deck.cards.length - 1) {\r\n      if (\r\n        window.confirm(\r\n          \"Restart cards?\\n\\nClick 'cancel' to return to the home page.\"\r\n        )\r\n      ) {\r\n        setIndex(0);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    } else {\r\n      setIndex((previousIndex) => previousIndex + 1);\r\n    }\r\n  };\r\n\r\n  const nextButton = hasFlipped && (\r\n    <button onClick={() => nextCard()}>Next</button>\r\n  );\r\n\r\n  if (!!deck && deck?.cards?.length <= 2) {\r\n    return (\r\n      <div>\r\n        <h4>Not enough cards</h4>\r\n        <p>\r\n          You need at least 3 cards to study. There are {deck?.cards?.length}{\" \"}\r\n          cards in this deck.\r\n        </p>\r\n        <AddCardsButton\r\n          url={`/decks/${deckId}/cards/new`}\r\n          deckButtonClick={routeButtonClick}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    !!deck && (\r\n      <div>\r\n        <h4>\r\n          Card {index + 1} of {deck?.cards?.length}\r\n        </h4>\r\n        <p>{cardDisplay}</p>\r\n        <button onClick={() => flipCard()}>Flip</button>\r\n        {nextButton}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default StudyCard;\r\n"]},"metadata":{},"sourceType":"module"}